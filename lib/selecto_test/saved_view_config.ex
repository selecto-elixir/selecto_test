defmodule SelectoTest.SavedViewConfig do
  @moduledoc """
  Ecto schema for saved view configurations with view type separation.

  Generated by mix selecto.gen.saved_view_configs
  """

  use Ecto.Schema
  import Ecto.Changeset

  @view_types ~w(detail aggregate graph)

  schema "saved_view_configs" do
    field :name, :string
    field :context, :string
    field :view_type, :string
    field :params, :map
    field :user_id, :string
    field :description, :string
    field :is_public, :boolean, default: false
    field :version, :integer, default: 1

    timestamps()
  end

  @doc false
  def changeset(saved_view_config, attrs) do
    saved_view_config
    |> cast(attrs, [
      :name,
      :context,
      :view_type,
      :params,
      :user_id,
      :description,
      :is_public,
      :version
    ])
    |> validate_required([:name, :context, :view_type, :params])
    |> validate_inclusion(:view_type, @view_types)
    |> validate_length(:name, min: 1, max: 255)
    |> validate_length(:description, max: 1000)
    |> unique_constraint([:name, :context, :view_type, :user_id],
      name: :saved_view_configs_unique_name_per_view_type
    )
  end

  @doc "Returns the list of valid view types"
  def view_types, do: @view_types
end
